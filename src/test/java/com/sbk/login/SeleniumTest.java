/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.sbk.login;

import org.junit.jupiter.api.Test;

//import static org.junit.Assert.assertEquals;
import static org.junit.jupiter.api.Assertions.*;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.AfterAll;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.By;

public class SeleniumTest {

	private static WebDriver driver;
	private static String PAGE_URL = "http://localhost:3000";
	//private static String PAGE_URL = "https://codility-frontend-prod.s3.amazonaws.com/media/task_static/qa_login_page/9a83bda125cd7398f9f482a3d6d45ea4/static/attachments/reference_page.html";

	@BeforeAll
	public static void setupWebdriverChromeDriver() {
		System.setProperty("webdriver.chrome.driver", System.getProperty("user.dir") + "/src/test/resources/drivers/chrome/chromedriver.exe");

		driver = new ChromeDriver();
		driver.get(PAGE_URL);
	}

	@BeforeEach
	public void initEach(){
		driver.navigate().refresh();
	}
	
	@AfterAll
	public static void teardown() {		
		if (driver != null) {
			driver.quit();
		}
	}

	@Test
	public void testFormTitle() {
		String titleText = "Test Web Page";
		assertEquals(titleText,driver.getTitle());
	}  
	
	@Test
	public void testForm() {
		
		String containerId="container";
		String formId="login-form";
		String msgsId="messages";
		
		final int EXPECTED_INPUTS = 2;
		final int EXPECTED_BUTTONS = 1;
		
		WebElement element = driver.findElement(By.id(containerId));
		assertTrue((element.isDisplayed()) && element.isEnabled() && !element.isSelected());
		
		element = driver.findElement(By.id(formId));
		assertTrue((element.isDisplayed()) && element.isEnabled() && !element.isSelected());
		
		List<WebElement> inputs = driver.findElements(By.cssSelector("input"));  // 2

		assertEquals(EXPECTED_INPUTS, inputs.size());
		
		for(WebElement input: inputs) {
			assertTrue((input.isDisplayed()) && input.isEnabled() && !input.isSelected());
		}
		
		List<WebElement> buttons = driver.findElements(By.cssSelector("button"));  // 1
		assertEquals(EXPECTED_BUTTONS, buttons.size());
		
		element = driver.findElement(By.id(msgsId));
		assertTrue((element.isDisplayed()) && element.isEnabled() && !element.isSelected());
		
	} 
	
	@Test
	public void testInputFields() {
				
		String emailId="email-input";
		String pwId="password-input";
		String butId="login-button";
		
		WebElement element = driver.findElement(By.id(emailId));
		assertEquals("email",element.getAttribute("type"));
		assertEquals("e-mail",element.getAttribute("placeholder"));
	
		element = driver.findElement(By.id(pwId));
		assertEquals("password",element.getAttribute("type"));
		assertEquals("password",element.getAttribute("placeholder"));
		
		element = driver.findElement(By.id(butId));
		assertEquals("Login",element.getText());
	}
		
	@Test
	public void testNoUserPassword() {
				
		final String ERR_MSG = "Password is required";
		
		String emailId="email-input";
		String butId="login-button";
		String msgsId="messages";
		
		String testUser = "login@codility.com";

		driver.findElement(By.id(emailId)).sendKeys(testUser);
		
		driver.findElement(By.id(butId)).click();
		
		WebElement element = driver.findElement(By.id(msgsId));
		assertEquals(ERR_MSG,element.getText());
	}

	@Test
	public void testNoUserEmail() {
		
		final String ERR_MSG = "Email is required";
		
		String pwId="password-input";
		String butId="login-button";
		String msgsId="messages";

		String testPw = "password";

		driver.findElement(By.id(pwId)).sendKeys(testPw);
		driver.findElement(By.id(butId)).click();
		
		WebElement element = driver.findElement(By.id(msgsId));
		assertEquals(ERR_MSG,element.getText());
		
	}
	
	public void testInvalidUserEmailFormat() {
		
		final String ERR_MSG = "Enter a valid email";
		
		String emailId="email-input";
		String pwId="password-input";
		String butId="login-button";
		String msgsId="messages";
		
		String testUser = "login@codility";		// Invalid email
		String testPw = "password";

		driver.findElement(By.id(emailId)).sendKeys(testUser);
		driver.findElement(By.id(pwId)).sendKeys(testPw);
		driver.findElement(By.id(butId)).click();
		
		WebElement element = driver.findElement(By.id(msgsId));
		assertEquals(ERR_MSG,element.getText());
		
	}

	@Test
	public void testInValidUserLogin() {
			
		final String ERR_MSG = "You shall not pass! Arr!";
		
		String emailId="email-input";
		String pwId="password-input";
		String butId="login-button";
		String msgsId="messages";
		
		String testUser = "logXn@codility.com";
		String testPw = "password";

		driver.findElement(By.id(emailId)).sendKeys(testUser);
		driver.findElement(By.id(pwId)).sendKeys(testPw);
		
		driver.findElement(By.id(butId)).click();
		
		WebElement element = driver.findElement(By.id(msgsId));
		assertEquals(ERR_MSG,element.getText());
	}
	
	@Test
	public void testInValidUserPassword() {
				
		final String ERR_MSG = "You shall not pass! Arr!";
		
		String emailId="email-input";
		String pwId="password-input";
		String butId="login-button";
		String msgsId="messages";
		
		String testUser = "login@codility.com";
		
		ArrayList<String> invalidPwList= new ArrayList<String>(Arrays.asList(
				"Password", "PASSWORD","passWord","passwor","assword",
				"p*", "p/*/")); 

		driver.findElement(By.id(emailId)).sendKeys(testUser);
		WebElement msgElement = driver.findElement(By.id(msgsId));
		
		for (String testPw : invalidPwList) {
			driver.findElement(By.id(pwId)).sendKeys(testPw);
			driver.findElement(By.id(butId)).click();
			
			assertEquals(ERR_MSG,msgElement.getText());
			
			driver.findElement(By.id(pwId)).clear();
		}

		
		
		
	}
	
	@Test
	public void testValidLogin() {
				
		final String SUCCESS_MSG = "Welcome: Successfully Logged In";
		
		String emailId="email-input";
		String pwId="password-input";
		String butId="login-button";
		
		String testUser = "login@king.com";
		String testPw = "password";
		
	
		driver.findElement(By.id(emailId)).sendKeys(testUser);
		driver.findElement(By.id(pwId)).sendKeys(testPw);
		
		driver.findElement(By.id(butId)).click();
		
		// Implicit Wait
		//driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		
		// Explicit Wait
		WebDriverWait wait = new WebDriverWait(driver,5);
		
		String actualValue = driver.findElement(By.xpath("//*[@id=\"container\"]/div")).getText();

		wait.until(ExpectedConditions.textToBePresentInElementLocated(By.xpath("//*[@id=\"container\"]/div"), actualValue));
		
		//WebElement element = driver.findElement(By.className("message success"));
		//WebElement element = driver.findElement(By.name("message success"));
		WebElement element = driver.findElement(By.cssSelector("#container > div"));
		assertEquals(SUCCESS_MSG,element.getText());
		
	}
}
